plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.4"
    id("io.micronaut.aot") version "4.0.4"
}

version = "0.1"
group = "com.marcosflobo"

repositories {
    mavenCentral()
}

dependencies {
    implementation("io.micronaut:micronaut-management")
    annotationProcessor('io.micronaut:micronaut-http-validation')
    annotationProcessor('io.micronaut.serde:micronaut-serde-processor')
    implementation('io.micronaut.serde:micronaut-serde-jackson')
    compileOnly('io.micronaut:micronaut-http-client')
    runtimeOnly('ch.qos.logback:logback-classic')
    testImplementation("io.micronaut:micronaut-http-client")

    // lombook
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // https://mvnrepository.com/artifact/org.telegram/telegrambots
    implementation ("org.telegram:telegrambots:6.8.0")

    // redis
    implementation("io.micronaut.redis:micronaut-redis-lettuce")

    // FTP & CSV
    // https://mvnrepository.com/artifact/commons-net/commons-net
    implementation 'commons-net:commons-net:3.10.0'
    implementation 'com.opencsv:opencsv:5.9'

    // Mysql
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut.data:micronaut-data-jdbc")
//    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("jakarta.validation:jakarta.validation-api")
    runtimeOnly("mysql:mysql-connector-java")
//    runtimeOnly("org.flywaydb:flyway-mysql")
    runtimeOnly("org.yaml:snakeyaml")


}


application {
    mainClass.set("com.marcosflobo.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.marcosflobo.*")
    }
    aot {
    // Please review carefully the optimizations enabled below
    // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



